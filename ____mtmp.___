## Make file template
## Lines starting with a single # are comments
## While lines starting with a single ` are preprocessor stuff
## Everything is processed line by line with whitespace preservation
##
## `if		-> #ifdef
## `ei		-> #elseifdef (not a real thing)
## `el		-> #else
## `en		-> #endif
##
## Have fun!
##

##################################
### HOW DO WE EXECUTE COMMANDS ###
##################################


# Ugly lowercasing for shells
__XX_LOWERJUNK = $(subst A,a,$(subst B,b,$(subst C,c,$(subst D,d,$(subst E,e,$(subst F,f,$(subst G,g,$(subst H,h,$(subst I,i,$(subst J,j,$(subst K,k,$(subst L,l,$(subst M,m,$(subst N,n,$(subst O,o,$(subst P,p,$(subst Q,q,$(subst R,r,$(subst S,s,$(subst T,t,$(subst U,u,$(subst V,v,$(subst W,w,$(subst X,x,$(subst Y,y,$(subst Z,z,$1))))))))))))))))))))))))))

# Do lowercasing
__XX_LSHELL   := $(call __XX_LOWERJUNK,$(SHELL))
__XX_LCOMSPEC := $(call __XX_LOWERJUNK,$(COMSPEC))

# Executing sub-make in DOS/Win?
ifeq (yes,$(strip $(__INT_ISONDOS)))
	__XX_RUNCURDIR  := 
	__XX_DELETE     := del
	__XX_DIRSEP     := $(strip \ )
	__XX_RUNCOMMAND = $(COMSPEC) /C $1
	__XX_DOSPATH    = $(subst /,\,$1)
	__XX_DEVNULL	:= NUL

else
	__XX_RUNCURDIR  := ./
	__XX_DELETE     := rm -f
	__XX_DIRSEP     := /
	__XX_RUNCOMMAND = $(SHELL) -c "$1"
	__XX_DOSPATH    = $1
	__XX_DEVNULL    := /dev/null

endif

###################
### DIRECTORIES ###
###################

__XX_BIN = bin
__XX_SRC = src
__XX_OBJ = $(__INT_OBJ)

ifneq (,$(strip $(__INT_INTERFACE)))
	__XX_DEFINTRF := $(__INT_INTERFACE)
endif

##########################
### SYSTEM DEFINITIONS ###
##########################

### System Building For ###
# MS-DOS, FreeDOS, *DOS
`if ?__MSDOS__
	__XX_EXESUFFIX = .exe
	__XX_OBJPREFIX = a
	__XX_ICFLAGS  = -D__REMOOD_SYSTEM_DOS -Ilib/glib/include
	__XX_ILDFLAGS = -lglib
	__XX_DEFINTRF ?= allegro

# Windows CE
`ei ?_WIN32_WCE
	__XX_EXESUFFIX = .exe
	__XX_OBJPREFIX = b
	__XX_ICFLAGS  = -D__REMOOD_SYSTEM_WINCE
	__XX_ILDFLAGS =
	__XX_DEFINTRF ?= win36c

# Windows 32-bit and 64-bit
`ei ?_WIN32
# Use different object stuff for win64
`if ?_WIN64
		__XX_OBJPREFIX = 6
`el
		__XX_OBJPREFIX = c
`en
	__XX_EXESUFFIX = .exe
	__XX_ICFLAGS  = -D__REMOOD_SYSTEM_WINDOWS
	__XX_ILDFLAGS = -mwindows
	__XX_DEFINTRF ?= sdl

# Linux
`ei ?__linux__
	__XX_EXESUFFIX = 
	__XX_OBJPREFIX = d
	__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX -D__REMOOD_SYSTEM_LINUX
	__XX_ILDFLAGS =
	__XX_DEFINTRF ?= sdl

# Apple
`ei ?__APPLE__
	# X
`if ?__MACH__
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = e
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX -D__REMOOD_SYSTEM_MACOSX
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	# Classic
`el
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = f
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_MACOS
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	#
`en

# Other UNIXES
`ei ?__unix__
	# CYGWin
`if ?__CYGWIN
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = g
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX -D__REMOOD_SYSTEM_CYGWIN
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	# Interix
`ei ?__INTERIX
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = h
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX -D__REMOOD_SYSTEM_INTERIX
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	# FreeBSD
`ei ?__FreeBSD__
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = i
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX -D__REMOOD_SYSTEM_BSD
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	# NetBSD
`ei ?__NetBSD__
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = j
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX -D__REMOOD_SYSTEM_BSD
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	# OpenBSD
`ei ?__OpenBSD__
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = k
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX -D__REMOOD_SYSTEM_BSD
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	# Solaris
`ei ?__sun
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = l
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX -D__REMOOD_SYSTEM_SOLARIS
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	# Generic UNIX
`el
		__XX_EXESUFFIX = 
		__XX_OBJPREFIX = m
		__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNIX
		__XX_ILDFLAGS =
		__XX_DEFINTRF ?= sdl
	
	#
`en

# AmigaOS
`ei ?__amigaos__
	__XX_EXESUFFIX =
	__XX_OBJPREFIX = n
	__XX_ICFLAGS  = -D__REMOOD_SYSTEM_AMIGA
	__XX_ILDFLAGS =
	__XX_DEFINTRF ?= sdl

# PalmOS
`ei ?__palmos__
	__XX_EXESUFFIX =
	__XX_OBJPREFIX = o
	__XX_ICFLAGS  = -D__REMOOD_SYSTEM_PALMOS
	__XX_ILDFLAGS =
	__XX_DEFINTRF ?= headless
	
# Unknown
`el
	__XX_EXESUFFIX =
	__XX_OBJPREFIX = z
	__XX_ICFLAGS  = -D__REMOOD_SYSTEM_UNKNOWN
	__XX_ILDFLAGS =
	__XX_DEFINTRF ?= headless

`en

##########################
### SELECTED INTERFACE ###
##########################

# SDL Interface
ifeq (sdl,$(strip $(__XX_DEFINTRF)))
	__XX_IFACEDIR = sdl
	__XX_FPREFIX = s
	__XX_FCFLAGS = -D__REMOOD_INTERFACE_SDL $(__INT_SDLCFLAGS)
	__XX_FLDFLAGS = $(__INT_SDLLDFLAGS)
else
	# Allegro Interface
	ifeq (allegro,$(strip $(__XX_DEFINTRF)))
		__XX_IFACEDIR = allegro
		__XX_FPREFIX = a
		__XX_FCFLAGS = -D__REMOOD_INTERFACE_ALLEGRO $(__INT_ALLEGROCFLAGS)
		__XX_FLDFLAGS = $(__INT_ALLEGROLDFLAGS)
	else
		# Raw Windows Interface
		ifeq (win36c,$(strip $(__XX_DEFINTRF)))
			__XX_IFACEDIR = win36c
			__XX_FPREFIX = w
			__XX_FCFLAGS = -D__REMOOD_INTERFACE_WIN36C
			__XX_FLDFLAGS = 
		else
			# Headless interface
			ifeq (headless,$(strip $(__XX_DEFINTRF)))
				__XX_IFACEDIR = headless
				__XX_FPREFIX = h
				__XX_FCFLAGS = -D__REMOOD_INTERFACE_HEADLESS
				__XX_FLDFLAGS = 
			endif
		endif
	endif
endif

##############
### CFLAGS ###
##############

__XX_CFLAGS := -I$(__XX_SRC) $(__INT_CFLAGS) $(__XX_ICFLAGS) $(__XX_FCFLAGS)
__XX_LDFLAGS := $(__INT_LDFLAGS) $(__XX_ILDFLAGS) $(__XX_FLDFLAGS)
__XX_OBJPRIME := $(__INT_OBJPREFIX)$(__XX_OBJPREFIX)$(__XX_FPREFIX)

###############
### OBJECTS ###
###############

__XX_OBJS := $(foreach __X_SOURCE, $(wildcard $(__XX_SRC)/*.c), $(__XX_OBJ)/$(basename $(notdir $(__X_SOURCE))).$(__XX_OBJPRIME)) $(foreach __X_SOURCE, $(wildcard $(__XX_SRC)/$(__XX_IFACEDIR)/*.c), $(__XX_OBJ)/$(basename $(notdir $(__X_SOURCE))).$(__XX_OBJPRIME))
__XX_OBJSCLEAN := $(foreach __X_OBJ, $(__XX_OBJS), __$(notdir $(__X_OBJ)))

###############
### TARGETS ###
###############

# All: Default
.PHONY: all
all:													$(__XX_BIN)/remood$(__INT_EXESUFFIX)$(__XX_EXESUFFIX)
														

# Clean targets
.PHONY: clean
clean:													$(__XX_OBJSCLEAN)
														@echo [RM] remood
														@$(call __XX_RUNCOMMAND,$(__XX_DELETE) $(call __XX_DOSPATH,$(__XX_BIN)/remood$(__INT_EXESUFFIX)$(__XX_EXESUFFIX))) > $(__XX_DEVNULL)

# Alias for binary
remood:													$(__XX_BIN)/remood$(__INT_EXESUFFIX)$(__XX_EXESUFFIX)
														

# The actual binary
$(__XX_BIN)/remood$(__INT_EXESUFFIX)$(__XX_EXESUFFIX):	$(__XX_OBJS)
														$(__INT_CC) -o $@ $(__XX_OBJS) $(__XX_LDFLAGS)

# Source files in src/
$(__XX_OBJ)/%.$(__XX_OBJPRIME):							$(__XX_SRC)/%.c
														@echo [CC] $(notdir $<)
														@$(__INT_CC) -c $< -o $@ $(__XX_CFLAGS)

# Source files in interfaces
$(__XX_OBJ)/%.$(__XX_OBJPRIME):							$(__XX_SRC)/$(__XX_IFACEDIR)/%.c
														@echo [CC] $(notdir $<)
														@$(__INT_CC) -c $< -o $@ $(__XX_CFLAGS)

# Clean object files built
__%.$(__XX_OBJPRIME):									
															@$(if $(wildcard $(__XX_OBJ)/$(subst __,,$@)),echo [RM] $(subst __,,$(basename $@)).o,)
														@$(if $(wildcard $(__XX_OBJ)/$(subst __,,$@)),$(call __XX_RUNCOMMAND,$(__XX_DELETE) $(call __XX_DOSPATH,$(__XX_OBJ)/$(subst __,,$@))) > $(__XX_DEVNULL),)


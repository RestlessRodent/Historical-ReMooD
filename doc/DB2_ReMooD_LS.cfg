// -----------------------------------------------------------------------------
// ########   ###### #####   #####  ######   ######  ######
// ##     ##  ##     ##  ## ##  ## ##    ## ##    ## ##   ##
// ##     ##  ##     ##   ###   ## ##    ## ##    ## ##    ##
// ########   ####   ##    #    ## ##    ## ##    ## ##    ##
// ##    ##   ##     ##         ## ##    ## ##    ## ##    ##
// ##     ##  ##     ##         ## ##    ## ##    ## ##   ##
// ##      ## ###### ##         ##  ######   ######  ######
//                      http://remood.sourceforge.net/
// -----------------------------------------------------------------------------
// Project Leader:    GhostlyDeath           (ghostlydeath@gmail.com)
// Project Co-Leader: RedZTag                (jostol27@gmail.com)
// Members:           Demyx                  (demyx@endgameftw.com)
// -----------------------------------------------------------------------------
// Portions Copyright (C) 2008 CodeImp.
// Portions Copyright (C) 2008 ReMooD Team.
// -----------------------------------------------------------------------------
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// -----------------------------------------------------------------------------
// Editor Configuration

description = "Legacy Script";
extensions = "fs";
casesensitive = true;
insertcase = 0;				// 0=Normal, 1=Lowercase, 2=Uppercase
lexer = 3;					// CPP-style, case-sensitive
functionopen = "(";
functionclose = ")";
argumentdelimiter = ",";
terminator = ";";
keywordhelp = "";

keywords
{
	abs = "abs(x)";
	acos = "acos(x)";
	ambientsound = "ambientsound(soundname)";
	asin = "asin(x)";
	atan = "atan(x)";
	beep = "beep()";
	break = "break()";
	ceilingheight = "ceilingheight(tag, height)";
	ceilingtext = "ceilingtext(tag, flat)";
	changemmusic = "changemmusic(musicname)";
	checkcvar = "checkcvar(cvar)";
	checklife = "checklife(obj)";
	clearcamera = "clearcamera()";
	clock = "clock()";
	closedoor = "closedoor(tag, speed)";
	colormap = "colormap(tag, colormap)";
	const = "const identifier = value";
	continue = "continue()";
	copyinto = "copyinto(source, target)";
	cos = "cos(x)";
	createpic = "createpic(lumpname, x, y, draw, trans, priority)";
	damageobj = "damageobj(obj, damage)";
	elementat = "elementat(array, index)";
	else = "else";
	elseif = "elseif(expression)";
	exitlevel = "exitlevel()";
	exitsecret = "exitsecret()";
	exp = "exp(x)";
	fadelight = "fadelight(tag, level, speed)";
	fixed = "fixed expression";
	floor = "floor(x)";
	floorheight = "floorheight(tag, height)";
	floortext = "floortext(tag, flat)";
	for = "for(initialization, condition, iteration)";
	gamemode = "gamemode()";
	gameskill = "gameskill()";
	getfriction = "getfriction(tag)";
	getpicattr = "getpicattr(handle, selector)";
	getpichandle = "getpichandle(lumpname, x, y)";
	getpichp = "getpichp()";
	getpiclp = "getpiclp()";
	getpicpriority = "getpicpriority(handle)";
	goto = "goto(label)";
	healobj = "healobj(obj, heal)";
	hub = "hub";
	if = "if(expression)";
	include = "include(lumpname)";
	int = "int expression";
	isplayerobj = "isplayerobj(obj)";
	kill = "kill(obj)";
	length = "length(array)";
	lightlevel = "lightlevel(tag, level)";
	lineattack = "lineattack(obj, angle, damage)";
	linetrigger = "linetrigger(special, tag)";
	log = "log(x)";
	mapthingnumexist = "mapthingnumexist(mapthing)";
	mapthings = "mapthings()";
	max = "max(x, y)";
	maxplayerammo = "maxplayerammo(plnum, ammonum, amount)";
	message = "message(message)";
	min = "min(x, y)";
	mobj = "mobj expression";
	modifypic = "modifypic(handle, lumpname, x, y)";
	movecamera = "movecamera(target, targetheight, movespeed, targetangle, anglespeed)";
	moveceil = "moveceil(tag, destheight, speed)";
	movefloor = "movefloor(tag, destheight, speed)";
	newarray = "newarray(array)";
	objangle = "objangle(obj)";
	objawaken = "objawaken(obj)";
	objflag = "objflag()";
	objflag2 = "objflag2()";
	objhealth = "objhealth(obj)";
	objmomx = "objmomx(obj, momx)";
	objmomy = "objmomy(obj, momy)";
	objmomz = "objmomz(obj, momz)";
	objsector = "objsector(obj)";
	objstate = "objstate(obj, state)";
	objtarget = "objtarget(source, target)";
	objtype = "objtype(obj)";
	objx = "objx(obj)";
	objy = "objy(obj)";
	objz = "objz(obj)";
	opendoor = "opendoor(tag, waittime, speed)";
	playdemo = "playdemo(demolump)";
	player = "player(playerobj)";
	playeraddfrag = "playeraddfrag(playerid, modifier)";
	playerammo = "playerammo(plnum, ammonum, amount)";
	playeringame = "playeringame(playerid)";
	playerkeys = "playerkeys(plnum, keynum, givetake)";
	playermsg = "playermsg(player, message)";
	playername = "playername(playerid)";
	playerobj = "playerobj(playerid)";
	playerselwep = "playerselwep(playerid, weapon)";
	playerskin = "playerskin(playerid)";
	playertimedtip = "playertimedtip(message)";
	playertip = "playertip(message)";
	playerweapon = "playerweapon(playerid, weapon, givetake)";
	pointtoangle = "pointtoangle(x1, y1, x2, y2)";
	pointtodist = "pointtodist(x1, y1, x2, y2)";
	pow = "pow(x, y)";
	print = "print(message)";
	prnd = "prnd()";
	pushthing = "pushthing(obj, angle, force)";
	radiusattack = "radiusattack(spot, source, damage)";
	reactiontime = "reactiontime(obj, val)";
	removeobj = "removeobj(obj)";
	ressurect = "ressurect(obj)";
	return = "return()";
	rnd = "rnd()";
	runcommand = "runcommand(command)";
	script = "script expression";
	scriptrunning = "scriptrunning(scriptid)";
	scriptwait = "scriptwait(scriptid)";
	scriptwaitpre = "scriptwaitpre(scriptid)";
	setcamera = "setcamera(obj, angle, height, pitch)";
	setcoronas = "setcoronas()";
	setelementat = "setelementat(array, index, element)";
	setfriction = "setfriction(tag, friction)";
	setlineblocking = "setlineblocking(tag, block)";
	setlinemnblock = "setlinemnblock(tag, block)";
	setlinetexture = "setlinetexture(tag, side, position, texture)";
	setpicpriority = "setpicpriority(handle, priority)";
	setpictrans = "setpictrans(handle, trans)";
	setpicvisible = "setpicvisible(handle, visible)";
	silentteleport = "silentteleport(obj, sectortag)";
	sin = "sin(x)";
	skincolor = "skincolor(playerid)";
	spawn = "spawn(type, x, y, angle, z)";
	spawnexplosion = "spawnexplosion(damage, spot, source)";
	spawnmissile = "spawnmissile(obj, target, missile)";
	spawnshot = "spawnshot(type, source, target, face)";
	sqrt = "sqrt(x)";
	startscript = "startscript(scriptid)";
	startsectorsound = "startsectorsound(tag, soundname)";
	startskill = "startskill(skill)";
	startsound = "startsound(obj, soundname)";
	string = "string expression";
	tagwait = "tagwait(tag)";
	tan = "tan(x)";
	teleport = "teleport(obj, sectortag)";
	testlocation = "testlocation(obj)";
	timedtip = "timedtip(message)";
	tip = "tip(message)";
	wait = "wait(time)";
	while = "while(expression)";
}

constants
{
}
